---
import IconAndText from "@/components/IconAndText.astro"
import { parseDatePublished } from "@/lib/parseDatePublished"
import { Icon } from "astro-icon/components"
import type { Person } from "@/models"
import { firstValueArrayStringJoin } from "@/lib/firstValueArrayJoin"

interface Props {
  href: string;
  image: string;
  title: string;
  authors: Person[];
  publishedDate: Date;
  class?: string;
}

const {
  class: className,
  publishedDate,
  href,
  image,
  title,
  authors,
} = Astro.props

const published = parseDatePublished(publishedDate)
---

<article class:list={["relative isolate", className]}>
  <figure class="relative aspect-video w-full h-full">
    <img
      loading="lazy"
      class="h-full w-full object-cover object-center"
      src={image}
      title={title}
      alt={title}
    />
  </figure>
  <a
    href={href}
    class="z-2 absolute top-0 left-0 flex h-full w-full flex-col gap-2 bg-primary/60 p-4 text-white transition-[backdrop-filter] no-underline hover:backdrop-blur hover:backdrop-saturate-150"
  >
    <h3
      class="line-clamp-2 mt-auto mb-2 text-ellipsis text-xl font-bold md:text-2xl"
    >
      {title}
    </h3>
    <div class="text-white">
      <IconAndText>
        <Icon class="text-xl" name="tabler:calendar" />
        <time date-time={published}>{published}</time>
      </IconAndText>
      {
        authors.length > 0 &&
          authors.map(({ attributes }) => {
            const shortName = firstValueArrayStringJoin(
              attributes.first_name,
              attributes.last_name,
            )
            return (
              <IconAndText>
                <Icon class="text-xl" name="tabler:user" />
                <span>{shortName}</span>
              </IconAndText>
            )
          })
      }
    </div>
  </a>
</article>
